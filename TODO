
Реализовать Sub::Throttler::Rate - алгоритм использующий скользящее окно и
не использующий EV для освобождения ресурсов.
- release_unused() может вызывать сложный сдвиг части/всего окна

Добавить поддержку dump() и restore() в Rate и Periodic.
- удалить used()

Добавить поддержку sync sub:
- убрать из доки беспочвенные претензии на единообразную поддержку
  sync/async subs
- добавить в API алгоритмов флаг освобождает ли алгоритм ресурсы просто по
  прошествии времени (a.k.a. "поддержка sync subs")
- добавить в API этих алгоритмов получение информации через сколько
  времени может освободиться ресурс (возможно это заменит вышеупомянутый
  флаг - если эта функция вернёт 0 или -1 значит sync subs не
  поддерживаются)
- добавить &throttle_me_sync:
  * при каждом вызове проверять, что применены только те алгоритмы,
    которые освобождают ресурсы по прошествии некоторого времени (т.е.
    Rate или Periodic), иначе croak
  * заблокировать выполнение throttle_flush() до завершения sync sub
  * если ресурсов для запуска не хватает, получить от алгоритмов
    минимальный временной интервал через который ресурсы могут появиться,
    и сделать Time::HiRes::sleep на это время
    . повторять до получения всех нужных ресурсов
- добавить throttle_it_sync()
  * сделать goto &func (для корректной работы wantarray/caller)

Документировать поддержку анонимных функций через Sub::Util::set_subname.

